---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: homepage
  namespace: homepage
spec:
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
  # Configure the main controller
    main:
    type: statefulset
    annotations:
      reloader.stakater.com/auto: "true"

    containers:
      # Configure the main application container
      main:
        image:
          main:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v0.8.8@sha256:0f066a6d6fba3a810a85aa79a483302b0fee21139b67adaeb245edae5051f3e8
              pullPolicy: IfNotPresent

      # Configure the code-server sidecar
      code:
        dependsOn: main
        image:
          repository: ghcr.io/codercom/code-server
          tag: 4.20.1
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
          - --port
          - "8081"
          - "/config"

service:
  # Configure a service for the main application
  main:
    type: ClusterIP
    ports:
      http:
        port: 3000
  # Configure a service for the code-server sidecar
  code:
    type: ClusterIP
    controller: main
    ports:
      http:
        port: 8081

ingress:
  # Configure an Ingress for the main application
  main:
    enabled: true
    ingressClassName: external
    annotations:
    external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-url: |-
      https://authentik-server.security.svc.cluster.local/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
      https://authentik.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
    hosts:
      - host: &host "homepage.${SECRET_DOMAIN}"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - *host
  # Configure an Ingress for the code-server sidecar
  code:
    enabled: true
    ingressClassName: external
    annotations:
    external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-url: |-
      https://authentik-server.security.svc.cluster.local/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
      https://authentik.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
    hosts:
      - host: &hostconfig "homepage-config.${SECRET_DOMAIN}"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - *hostconfig

persistence:
  # Configure the main configuration storage location
  config:
    enabled: true
    existingClaim: homepage-data
    globalMounts:
      - path: /config
